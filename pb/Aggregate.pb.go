//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: Aggregate.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AggregateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	//   - The request passed to the AggregateService consists of three parts
	//     (1) the (canonical) classname of the ColumnInterpreter implementation
	//     (2) the Scan query
	//     (3) any bytes required to construct the ColumnInterpreter object
	//     properly
	InterpreterClassName        *string `protobuf:"bytes,1,req,name=interpreter_class_name,json=interpreterClassName" json:"interpreter_class_name,omitempty"`
	Scan                        *Scan   `protobuf:"bytes,2,req,name=scan" json:"scan,omitempty"`
	InterpreterSpecificBytes    []byte  `protobuf:"bytes,3,opt,name=interpreter_specific_bytes,json=interpreterSpecificBytes" json:"interpreter_specific_bytes,omitempty"`
	ClientSupportsPartialResult *bool   `protobuf:"varint,4,opt,name=client_supports_partial_result,json=clientSupportsPartialResult,def=0" json:"client_supports_partial_result,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

// Default values for AggregateRequest fields.
const (
	Default_AggregateRequest_ClientSupportsPartialResult = bool(false)
)

func (x *AggregateRequest) Reset() {
	*x = AggregateRequest{}
	mi := &file_Aggregate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest) ProtoMessage() {}

func (x *AggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Aggregate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest.ProtoReflect.Descriptor instead.
func (*AggregateRequest) Descriptor() ([]byte, []int) {
	return file_Aggregate_proto_rawDescGZIP(), []int{0}
}

func (x *AggregateRequest) GetInterpreterClassName() string {
	if x != nil && x.InterpreterClassName != nil {
		return *x.InterpreterClassName
	}
	return ""
}

func (x *AggregateRequest) GetScan() *Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *AggregateRequest) GetInterpreterSpecificBytes() []byte {
	if x != nil {
		return x.InterpreterSpecificBytes
	}
	return nil
}

func (x *AggregateRequest) GetClientSupportsPartialResult() bool {
	if x != nil && x.ClientSupportsPartialResult != nil {
		return *x.ClientSupportsPartialResult
	}
	return Default_AggregateRequest_ClientSupportsPartialResult
}

type AggregateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// The AggregateService methods all have a response that either is a Pair
	// or a simple object. When it is a Pair both first_part and second_part
	// have defined values (and the second_part is not present in the response
	// when the response is not a pair). Refer to the AggregateImplementation
	// class for an overview of the AggregateResponse object constructions.
	FirstPart         [][]byte `protobuf:"bytes,1,rep,name=first_part,json=firstPart" json:"first_part,omitempty"`
	SecondPart        []byte   `protobuf:"bytes,2,opt,name=second_part,json=secondPart" json:"second_part,omitempty"`
	NextChunkStartRow []byte   `protobuf:"bytes,3,opt,name=next_chunk_start_row,json=nextChunkStartRow" json:"next_chunk_start_row,omitempty"`
	WaitIntervalMs    *uint64  `protobuf:"varint,4,opt,name=wait_interval_ms,json=waitIntervalMs,def=0" json:"wait_interval_ms,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for AggregateResponse fields.
const (
	Default_AggregateResponse_WaitIntervalMs = uint64(0)
)

func (x *AggregateResponse) Reset() {
	*x = AggregateResponse{}
	mi := &file_Aggregate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateResponse) ProtoMessage() {}

func (x *AggregateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Aggregate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateResponse.ProtoReflect.Descriptor instead.
func (*AggregateResponse) Descriptor() ([]byte, []int) {
	return file_Aggregate_proto_rawDescGZIP(), []int{1}
}

func (x *AggregateResponse) GetFirstPart() [][]byte {
	if x != nil {
		return x.FirstPart
	}
	return nil
}

func (x *AggregateResponse) GetSecondPart() []byte {
	if x != nil {
		return x.SecondPart
	}
	return nil
}

func (x *AggregateResponse) GetNextChunkStartRow() []byte {
	if x != nil {
		return x.NextChunkStartRow
	}
	return nil
}

func (x *AggregateResponse) GetWaitIntervalMs() uint64 {
	if x != nil && x.WaitIntervalMs != nil {
		return *x.WaitIntervalMs
	}
	return Default_AggregateResponse_WaitIntervalMs
}

var File_Aggregate_proto protoreflect.FileDescriptor

var file_Aggregate_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x3c, 0x0a, 0x1a,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x1e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x14,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x2b, 0x0a,
	0x10, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x0e, 0x77, 0x61, 0x69, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73, 0x32, 0x99, 0x03, 0x0a, 0x10, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x76, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x74, 0x64, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x53, 0x0a, 0x31, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0f, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x48, 0x01, 0x5a, 0x05,
	0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
})

var (
	file_Aggregate_proto_rawDescOnce sync.Once
	file_Aggregate_proto_rawDescData []byte
)

func file_Aggregate_proto_rawDescGZIP() []byte {
	file_Aggregate_proto_rawDescOnce.Do(func() {
		file_Aggregate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Aggregate_proto_rawDesc), len(file_Aggregate_proto_rawDesc)))
	})
	return file_Aggregate_proto_rawDescData
}

var file_Aggregate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_Aggregate_proto_goTypes = []any{
	(*AggregateRequest)(nil),  // 0: pb.AggregateRequest
	(*AggregateResponse)(nil), // 1: pb.AggregateResponse
	(*Scan)(nil),              // 2: pb.Scan
}
var file_Aggregate_proto_depIdxs = []int32{
	2, // 0: pb.AggregateRequest.scan:type_name -> pb.Scan
	0, // 1: pb.AggregateService.GetMax:input_type -> pb.AggregateRequest
	0, // 2: pb.AggregateService.GetMin:input_type -> pb.AggregateRequest
	0, // 3: pb.AggregateService.GetSum:input_type -> pb.AggregateRequest
	0, // 4: pb.AggregateService.GetRowNum:input_type -> pb.AggregateRequest
	0, // 5: pb.AggregateService.GetAvg:input_type -> pb.AggregateRequest
	0, // 6: pb.AggregateService.GetStd:input_type -> pb.AggregateRequest
	0, // 7: pb.AggregateService.GetMedian:input_type -> pb.AggregateRequest
	1, // 8: pb.AggregateService.GetMax:output_type -> pb.AggregateResponse
	1, // 9: pb.AggregateService.GetMin:output_type -> pb.AggregateResponse
	1, // 10: pb.AggregateService.GetSum:output_type -> pb.AggregateResponse
	1, // 11: pb.AggregateService.GetRowNum:output_type -> pb.AggregateResponse
	1, // 12: pb.AggregateService.GetAvg:output_type -> pb.AggregateResponse
	1, // 13: pb.AggregateService.GetStd:output_type -> pb.AggregateResponse
	1, // 14: pb.AggregateService.GetMedian:output_type -> pb.AggregateResponse
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Aggregate_proto_init() }
func file_Aggregate_proto_init() {
	if File_Aggregate_proto != nil {
		return
	}
	file_Client_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Aggregate_proto_rawDesc), len(file_Aggregate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Aggregate_proto_goTypes,
		DependencyIndexes: file_Aggregate_proto_depIdxs,
		MessageInfos:      file_Aggregate_proto_msgTypes,
	}.Build()
	File_Aggregate_proto = out.File
	file_Aggregate_proto_goTypes = nil
	file_Aggregate_proto_depIdxs = nil
}
